/*!
 * rxgitcid
 * version: 0.0.3
 * repo: https://github.com/cheere/rxgitcid
 * build: 2023-09-27 09:01:24
 */
define(["child_process"],(function(t){"use strict";function n(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}const i=n(t).default,e={},c="git log -1",o="unknow",r={cid:o,log:o,gitDate:o};function u(t){let n="";return t&&"string"==typeof t&&(n="cd "+t+" && "),n+=c,n}function d(t){let n=o;if(!t)return n;const i=t.split(" "),e=i.length>1?i[1]:t;return e&&(n=e.length>7?e.substring(0,7):e),n}function f(t){let n={},i=o;if(!t)return i;const e=t.split(" "),c=e.length>1?e[1]:t;c&&(i=c.length>7?c.substring(0,7):c,n.cid=i);const r=t.split("\n"),u=r&&r.length,d=u>2?r[2]:t;if(d){let t="";if(d.length>5){const n=d.substring(5);t=new Date(n).toLocaleDateString("zh-CN",{year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"}).replace(/\//g,"-")}else t=d;n.gitDate=t.trim()}let f=u>2?r[u-2]:"unknow";return f&&(f=f.trim(),n.log=f),n}return e.pathCid=function(t,n){const e=u(t);i.exec(e,{encoding:"utf8"},(function(t,i,e){let c=o;t||(c=d(i)),function(t){n&&n(t)}(c)}))},e.cid=function(t){e.coreCid(!0,t)},e.cidSync=function(t){return e.coreCidSync(!0,t)},e.cidObject=function(t){e.coreCid(!1,t)},e.cidObjectSync=function(t){return e.coreCidSync(!1,t)},e.coreCid=function(t,n){t=t||!1;i.exec("git log -1",{encoding:"utf8"},(function(i,e,c){let r=o;i||(r=t?d(e):f(e)),function(t){n&&n(t)}(r)}))},e.coreCidSync=function(t,n){t=t||!1;let e=o;try{const c=u(n),o=i.execSync(c).toString();e=t?d(o):f(sdout)}catch(n){e=t?o:r}return e},e.version='"0.0.3"',e}));
