/*!
 * rxgitcid
 * version: 0.0.4
 * repo: https://github.com/cheere/rxgitcid
 * build: 2024-11-01 23:12:33
 */
"use strict";function n(n){return n&&"object"==typeof n&&"default"in n?n:{default:n}}const t=n(require("child_process")).default,e={},i={cid:"unknow",log:"unknow",gitDate:"unknow"};function c(n){let t="";return n&&"string"==typeof n&&(t="cd "+n+" && "),t+="git log -1",t}function o(n){let t="unknow";if(!n)return t;const e=n.split(" "),i=e.length>1?e[1]:n;return i&&(t=i.length>7?i.substring(0,7):i),t}function u(n){let t={},e="unknow";if(!n)return e;const i=n.split(" "),c=i.length>1?i[1]:n;c&&(e=c.length>7?c.substring(0,7):c,t.cid=e);const o=n.split("\n"),u=o&&o.length,r=u>2?o[2]:n;if(r){let n="";if(r.length>5){const t=r.substring(5);n=new Date(t).toLocaleDateString("zh-CN",{year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"}).replace(/\//g,"-")}else n=r;t.gitDate=n.trim()}let l=u>2?o[u-2]:"unknow";return l&&(l=l.trim(),t.log=l),t}e.pathCid=function(n,e){const i=c(n);t.exec(i,{encoding:"utf8"},(function(n,t,i){let c="unknow";n||(c=o(t)),function(n){e&&e(n)}(c)}))},e.cid=function(n){e.coreCid(!0,n)},e.cidSync=function(n){return e.coreCidSync(!0,n)},e.cidObject=function(n){e.coreCid(!1,n)},e.cidObjectSync=function(n){return e.coreCidSync(!1,n)},e.coreCid=function(n,e){n=n||!1;t.exec("git log -1",{encoding:"utf8"},(function(t,i,c){let r="unknow";t||(r=n?o(i):u(i)),function(n){e&&e(n)}(r)}))},e.coreCidSync=function(n,e){n=n||!1;let r="unknow";try{const i=c(e),l=t.execSync(i).toString();r=n?o(l):u(l)}catch(t){r=n?"unknow":i}return r},e.version='"0.0.4"';var r=e;module.exports=r;
