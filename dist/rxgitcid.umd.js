/*!
 * rxgitcid
 * version: 0.0.3
 * repo: https://github.com/cheere/rxgitcid
 * build: 2023-09-27 09:01:24
 */
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n(require("child_process")):"function"==typeof define&&define.amd?define(["child_process"],n):((t="undefined"!=typeof globalThis?globalThis:t||self).rxgitcid=t.rxgitcid||{},t.rxgitcid.umd=n(t.require$$0))}(this,(function(t){"use strict";function n(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}const e=n(t).default,i={},c="git log -1",o="unknow",r={cid:o,log:o,gitDate:o};function u(t){let n="";return t&&"string"==typeof t&&(n="cd "+t+" && "),n+=c,n}function d(t){let n=o;if(!t)return n;const e=t.split(" "),i=e.length>1?e[1]:t;return i&&(n=i.length>7?i.substring(0,7):i),n}function f(t){let n={},e=o;if(!t)return e;const i=t.split(" "),c=i.length>1?i[1]:t;c&&(e=c.length>7?c.substring(0,7):c,n.cid=e);const r=t.split("\n"),u=r&&r.length,d=u>2?r[2]:t;if(d){let t="";if(d.length>5){const n=d.substring(5);t=new Date(n).toLocaleDateString("zh-CN",{year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"}).replace(/\//g,"-")}else t=d;n.gitDate=t.trim()}let f=u>2?r[u-2]:"unknow";return f&&(f=f.trim(),n.log=f),n}return i.pathCid=function(t,n){const i=u(t);e.exec(i,{encoding:"utf8"},(function(t,e,i){let c=o;t||(c=d(e)),function(t){n&&n(t)}(c)}))},i.cid=function(t){i.coreCid(!0,t)},i.cidSync=function(t){return i.coreCidSync(!0,t)},i.cidObject=function(t){i.coreCid(!1,t)},i.cidObjectSync=function(t){return i.coreCidSync(!1,t)},i.coreCid=function(t,n){t=t||!1;e.exec("git log -1",{encoding:"utf8"},(function(e,i,c){let r=o;e||(r=t?d(i):f(i)),function(t){n&&n(t)}(r)}))},i.coreCidSync=function(t,n){t=t||!1;let i=o;try{const c=u(n),o=e.execSync(c).toString();i=t?d(o):f(sdout)}catch(n){i=t?o:r}return i},i.version='"0.0.3"',i}));
